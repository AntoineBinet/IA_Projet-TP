$date
	Thu Apr 06 17:21:39 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_adder_8bit $end
$var wire 8 ! result [7:0] $end
$var reg 8 " a [7:0] $end
$var reg 8 # b [7:0] $end
$scope module uut $end
$var wire 8 $ a [7:0] $end
$var wire 8 % b [7:0] $end
$var wire 8 & result [7:0] $end
$var wire 8 ' sum [7:0] $end
$var reg 8 ( carry [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b110 #
b110 %
b1011 !
b1011 &
b1011 '
b101 "
b101 $
#20000
b1000 #
b1000 %
b1111 !
b1111 &
b1111 '
b111 "
b111 $
#30000
b1 #
b1 %
b10101011 !
b10101011 &
b10101011 '
b10101010 "
b10101010 $
#40000
b11111111 #
b11111111 %
b11111110 !
b11111110 &
b11111110 '
b11111111 "
b11111111 $
#50000
